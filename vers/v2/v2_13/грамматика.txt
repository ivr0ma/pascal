P → program D1 ; B.
D1 → eps | OD {, D1} | OP {, D1}  // | OF
OD → var D {, D}
OP → procedure I ( eps | DP {, DP} ); OD; B
OF → function I ( eps | DP {, DP} ): [ integer | boolean ]; OD; B
D → I {, I}: [ integer | boolean | array [N .. N] of [integer | boolean] ]
B → begin S {; S} end
S → I ( [eps | I {, I} ] ) |
    I := [ E | if E then S else S | while E do S | B | read (I) | write (E) ]
E → E1 [ = | < | > | <= | >= | != ] E1 | E1
E1 → T { [ + | - | or ] T }
T → F { [ * | / | and ] F }
F → I | I[N] | I ( [eps | I {, I}] ) | N | L | not F | (E)
L → true | false
I → a | b | ...| z | Ia | Ib |...| Iz | I0 | I1 |...| I9
N → 0 | 1 |...| 9 | N0 | N1 |...| N9
